# This file was generated by GoReleaser. DO NOT EDIT.
cask "ccin" do
  desc "An advanced CLI for generating CRUD applications with modular architecture"
  homepage "https://github.com/chrisloarryn/homebrew-ccin"
  version "0.0.8"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "ccin"

  on_macos do
    url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.8/ccin_Darwin_all.tar.gz"
    sha256 "b7e70010a0fb1a064ba057d9cf42a9155d3b5f618122ac1591aa7fde8b7f5a17"
  end

  on_linux do
    on_intel do
      url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.8/ccin_Linux_x86_64.tar.gz"
      sha256 "1e336f3a371779f084a8a30e033dd1f75088f0234bc07f3c5529450a1662f1a4"
    end
    on_arm do
      url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.8/ccin_Linux_arm64.tar.gz"
      sha256 "b8fc3a95d66ff79c472e487ba1fb9f92b39556832cba02b721cb61a57c29cdd6"
    end
  end

  postflight do
    if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
      system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/ccin"]
    end
  end

  caveats do
    "After installation, you can use ccin to generate CRUD applications:"
    "  ccin generate nestjs my-api --domain user"
    "  ccin generate go-gin my-gin-api --domain product --grpc"
    "  ccin generate go-fiber my-fiber-api --domain order"
  end

  # No zap stanza required
end
