# This file was generated by GoReleaser. DO NOT EDIT.
cask "ccin" do
  desc "An advanced CLI for generating CRUD applications with modular architecture"
  homepage "https://github.com/chrisloarryn/homebrew-ccin"
  version "0.0.10"

  livecheck do
    skip "Auto-generated on release."
  end

  binary "ccin"

  on_macos do
    url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.10/ccin_Darwin_all.tar.gz"
    sha256 "303b42be6c1a9a37f306f524936a16f081c4dd295184ba362a97d90b70013811"
  end

  on_linux do
    on_intel do
      url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.10/ccin_Linux_x86_64.tar.gz"
      sha256 "486e67c476b548725c642fe224e41d370eed4a671edcd487b82c866b3335c881"
    end
    on_arm do
      url "https://github.com/chrisloarryn/homebrew-ccin/releases/download/v0.0.10/ccin_Linux_arm64.tar.gz"
      sha256 "f17bf6cd04f61ac0ed6880fe4f828aeae787171014b1be8a1770e4f0fd583c2e"
    end
  end

  postflight do
    if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
      system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/ccin"]
    end
  end

  caveats do
    "After installation, you can use ccin to generate CRUD applications:"
    "  ccin generate nestjs my-api --domain user"
    "  ccin generate go-gin my-gin-api --domain product --grpc"
    "  ccin generate go-fiber my-fiber-api --domain order"
  end

  # No zap stanza required
end
